* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Outfit', 'Noto Sans JP', sans-serif;
}

html,
body {
    height: 100%;
    overflow: hidden;
}

body {
    background: var(--bg-color);
    color: var(--text-color);
    transition: background-color 0.3s ease, color 0.3s ease;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

header {
    background: var(--card-bg);
    padding: 1.5rem 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.03);
}

header h1 {
    color: var(--primary-color);
    font-weight: 700;
    font-size: 1.8rem;
}

.settings-modal {
    position: fixed;
    inset: 0;
    background: rgba(18, 18, 18, 0.85);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 1500;
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
}

.settings-modal.active {
    display: flex;
}

.settings-box {
    background: var(--card-bg);
    border-radius: 16px;
    padding: 2.5rem 3rem;
    max-width: 400px;
    width: 90%;
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
    text-align: center;
    color: var(--text-color);
}

.settings-box h2 {
    margin-bottom: 1.8rem;
    font-weight: 700;
    font-size: 1.8rem;
    color: var(--primary-color);
}

.settings-options {
    display: flex;
    flex-direction: column;
    gap: 1.3rem;
    margin-bottom: 2rem;
}

.settings-option {
    background: var(--button-bg);
    color: var(--primary-color);
    border: none;
    padding: 1rem 1.2rem;
    border-radius: 12px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    box-shadow: 0 6px 12px var(--input-box-shadow);
    transition: background 0.3s ease, color 0.3s ease;
}

.settings-option:hover {
    background: var(--accent-color);
    color: white;
    box-shadow: 0 8px 20px var(--input-box-shadow);
}

.close-settings {
    background: transparent;
    border: 2px solid var(--primary-color);
    color: var(--primary-color);
    padding: 0.5rem 1.2rem;
    border-radius: 10px;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.3s ease, color 0.3s ease;
}

.close-settings:hover {
    background: var(--primary-color);
    color: var(--button-hover-color);
}

#toggle-snow-btn {
    position: relative;
    overflow: hidden;
    background-color: var(--button-bg);
    color: var(--primary-color);
    border-radius: 12px;
    padding: 1rem 1.2rem;
    font-weight: 600;
    font-size: 1.1rem;
    cursor: pointer;
    box-shadow: 0 4px 12px var(--input-box-shadow);
    transition: color 0.4s ease;
    z-index: 0;
}

/* The progressive fill overlay */
#toggle-snow-btn::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0%;
    border-radius: 12px;
    background:
        linear-gradient(90deg,
            var(--accent-color) 0%,
            #f9e2ff99 40%,
            var(--accent-color) 80%);
    box-shadow: 0 0 10px var(--accent-color);
    filter: drop-shadow(0 0 6px var(--accent-color));
    z-index: -1;
    transition: width 0.1s linear;
    animation: none;
}

/* Sweep shine gradient on top */
#toggle-snow-btn::after {
    content: "";
    position: absolute;
    top: 0;
    left: -40%;
    width: 40%;
    height: 100%;
    background:
        linear-gradient(120deg,
            transparent,
            rgba(255, 255, 255, 0.6),
            transparent);
    border-radius: 12px;
    z-index: 1;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease;
}

/* When sakura ON: animate fill growing and show sweep */
body.snow-on #toggle-snow-btn::before {
    animation: fillGrow 2.5s forwards ease-out;
}

body.snow-on #toggle-snow-btn::after {
    animation: sweepShine 2.5s linear infinite;
    opacity: 1;
}

body.snow-on #toggle-snow-btn {
    color: #fff;
    box-shadow: 0 0 16px var(--accent-color);
}

/* Keyframes for progressive fill growth */
@keyframes fillGrow {
    0% {
        width: 0%;
    }

    100% {
        width: 100%;
    }
}

/* Sweep shine sliding from left to right */
@keyframes sweepShine {
    0% {
        left: -40%;
    }

    100% {
        left: 100%;
    }
}

.snow-retrigger::before {
    animation: fillGrow 2.5s forwards ease-out;
}

.snow-retrigger::after {
    animation: sweepShine 2.5s linear infinite;
    opacity: 1;
}


body.snow-on #toggle-snow-btn {
    background: var(--accent-color);
    color: white;
    box-shadow: 0 0 10px var(--accent-color);
}

#toggle-snow-btn:hover {
    background: var(--accent-color);
    color: white;
}

.container {
    max-width: 800px;
    margin: 5rem auto;
    background: var(--card-bg);
    border-radius: 16px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.04);
    padding: 3rem;
    text-align: center;
}

.kanji-container {
    display: flex;
    justify-content: center;
    gap: 0.6rem;
    margin-bottom: 2rem;
    margin-top: 2rem;
    cursor: pointer;
}

.ruby-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.furigana {
    font-size: 1rem;
    color: var(--hint-color);
    font-weight: 600;
    height: 1.5rem;
    line-height: 1.5rem;
    transform: translateX(4px);
    user-select: none;
}

.kanji-char {
    font-size: 5.5rem;
    color: var(--primary-color);
    line-height: 1.2;
    user-select: none;
}

.meaning-box {
    background: var(--input-bg);
    color: var(--text-color);
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
    margin-top: 2rem;
    line-height: 1.8;
    text-align: left;
}

.meaning-box span {
    color: var(--primary-color);
    font-size: 1.2rem;
    margin-bottom: 1rem;
}

.meaning-box h2 {
    color: var(--primary-color);
    font-size: 1.5rem;
    margin-bottom: 1rem;
}

.meaning-box .reading {
    font-weight: bold;
    color: var(--accent-color);
}

.meaning-box .example {
    margin-top: 1rem;
    font-style: italic;
    color: var(--hint-color);
}

.kanji-char:hover {
    text-shadow: 0 0 5px var(--accent-color), 0 0 10px var(--accent-color), 0 0 20px var(--primary-color);
    transition: text-shadow 0.3s ease;
}

input[type="text"] {
    width: 100%;
    padding: 0.9rem;
    font-size: 1.05rem;
    border: 2px solid var(--input-border);
    border-radius: 10px;
    margin-top: 1rem;
    margin-bottom: 1.5rem;
    background: var(--input-bg);
    color: var(--text-color);
    box-shadow: 0 4px 4px var(--input-box-shadow);
    ime-mode: active;
}

input[type="text"]::placeholder {
    color: var(--placeholder-color);
}

input[type="text"]:focus {
    outline: none;
    border-color: var(--input-border-focus);
    box-shadow: 0 0 10px var(--input-border-focus);
}

.controls {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 1rem;
    margin-top: 1rem;
}

.controls button {
    flex: 1;
    min-width: 160px;
    padding: 1.1rem;
    border: none;
    border-radius: 10px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    background: var(--button-bg);
    color: var(--primary-color);
    box-shadow: 0 4px 12px var(--input-box-shadow);
    transition: transform 0.2s ease, background 0.3s ease, color 0.3s ease;
}

.controls button:hover {
    background: var(--button-hover-bg);
    color: var(--button-hover-color);
    transform: translateY(-1px);
}

.scoreboard {
    display: flex;
    justify-content: center;
    gap: 15rem;
    margin-top: -1rem;
    font-size: 1.1rem;
    font-weight: 600;
    padding: 1rem 0;
    border-top: 2px dashed var(--input-border);
    border-bottom: 2px dashed var(--input-border);
    color: var(--text-color);
}

.score-item {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.score-label {
    font-size: 0.9rem;
    color: var(--muted);
    margin-bottom: 0.2rem;
}

.score-value {
    font-size: 1.0rem;
    color: var(--primary-color);
}

#correct-score-item {
    transform: translateX(250%);
}

#wrong-score-item {
    transform: translateX(20%);
}

#total-score-item {
    transform: translateX(-140%);
}

@media (max-width: 600px) {
    .controls {
        flex-direction: column;
    }
}

body {
    opacity: 1;
    transform: scale(1);
    transition: opacity 0.4s ease, transform 0.4s ease;
}

body.transition-out {
    opacity: 0;
    transform: scale(0.98) translateY(10px);
}